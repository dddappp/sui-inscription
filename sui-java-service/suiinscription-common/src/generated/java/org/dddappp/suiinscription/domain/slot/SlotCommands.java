// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddappp.suiinscription.domain.slot;

import java.util.*;
import java.math.BigInteger;
import java.util.Date;
import org.dddappp.suiinscription.domain.*;

public class SlotCommands {
    private SlotCommands() {
    }

    public static class Create extends AbstractSlotCommand implements SlotCommand {

        public String getCommandType() {
            return "Create";
        }

        public void setCommandType(String commandType) {
            //do nothing
        }

        /**
         * Slot Number
         */
        private Integer slotNumber;

        public Integer getSlotNumber() {
            return this.slotNumber;
        }

        public void setSlotNumber(Integer slotNumber) {
            this.slotNumber = slotNumber;
        }

        /**
         * Clock
         */
        private String clock;

        public String getClock() {
            return this.clock;
        }

        public void setClock(String clock) {
            this.clock = clock;
        }

        /**
         * Off Chain Version
         */
        private Long offChainVersion;

        public Long getOffChainVersion() {
            return this.offChainVersion;
        }

        public void setOffChainVersion(Long offChainVersion) {
            this.offChainVersion = offChainVersion;
        }

    }

    public static class PutUpCandidate extends AbstractSlotCommand implements SlotCommand {

        public String getCommandType() {
            return "PutUpCandidate";
        }

        public void setCommandType(String commandType) {
            //do nothing
        }

        /**
         * Slot Number
         */
        private Integer slotNumber;

        public Integer getSlotNumber() {
            return this.slotNumber;
        }

        public void setSlotNumber(Integer slotNumber) {
            this.slotNumber = slotNumber;
        }

        /**
         * Candidate Inscription
         */
        private String candidateInscription;

        public String getCandidateInscription() {
            return this.candidateInscription;
        }

        public void setCandidateInscription(String candidateInscription) {
            this.candidateInscription = candidateInscription;
        }

        /**
         * Clock
         */
        private String clock;

        public String getClock() {
            return this.clock;
        }

        public void setClock(String clock) {
            this.clock = clock;
        }

        /**
         * Off Chain Version
         */
        private Long offChainVersion;

        public Long getOffChainVersion() {
            return this.offChainVersion;
        }

        public void setOffChainVersion(Long offChainVersion) {
            this.offChainVersion = offChainVersion;
        }

    }

    public static class Advance extends AbstractSlotCommand implements SlotCommand {

        public String getCommandType() {
            return "Advance";
        }

        public void setCommandType(String commandType) {
            //do nothing
        }

        /**
         * Slot Number
         */
        private Integer slotNumber;

        public Integer getSlotNumber() {
            return this.slotNumber;
        }

        public void setSlotNumber(Integer slotNumber) {
            this.slotNumber = slotNumber;
        }

        /**
         * Clock
         */
        private String clock;

        public String getClock() {
            return this.clock;
        }

        public void setClock(String clock) {
            this.clock = clock;
        }

        /**
         * Off Chain Version
         */
        private Long offChainVersion;

        public Long getOffChainVersion() {
            return this.offChainVersion;
        }

        public void setOffChainVersion(Long offChainVersion) {
            this.offChainVersion = offChainVersion;
        }

    }

}

