// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddappp.suiinscription.sui.contract;

import com.fasterxml.jackson.databind.PropertyNamingStrategies;
import com.fasterxml.jackson.databind.annotation.JsonNaming;
import com.github.wubuku.sui.bean.*;

import java.math.*;
import java.util.*;

@JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy.class)
public class Slot {

    private UID id;

    private Integer slotNumber;

    private Long offChainVersion;

    private BigInteger genesisTimestamp;

    private BigInteger slotMaxAmount;

    private BigInteger mintedAmount;

    private BigInteger round;

    private BigInteger qualifiedRound;

    private String qualifiedInscriptionId;

    private int[] qualifiedHash;

    private BigInteger qualifiedTimestamp;

    private BigInteger qualifiedDifference;

    private String candidateInscriptionId;

    private int[] candidateHash;

    private String candidateInscriber;

    private BigInteger candidateTimestamp;

    private BigInteger candidateAmount;

    private BigInteger candidateNonce;

    private BigInteger candidateDifference;

    private String candidateContent;

    private BigInteger version;

    public UID getId() {
        return id;
    }

    public void setId(UID id) {
        this.id = id;
    }

    public Integer getSlotNumber() {
        return slotNumber;
    }

    public void setSlotNumber(Integer slotNumber) {
        this.slotNumber = slotNumber;
    }

    public Long getOffChainVersion() {
        return offChainVersion;
    }

    public void setOffChainVersion(Long offChainVersion) {
        this.offChainVersion = offChainVersion;
    }

    public BigInteger getGenesisTimestamp() {
        return genesisTimestamp;
    }

    public void setGenesisTimestamp(BigInteger genesisTimestamp) {
        this.genesisTimestamp = genesisTimestamp;
    }

    public BigInteger getSlotMaxAmount() {
        return slotMaxAmount;
    }

    public void setSlotMaxAmount(BigInteger slotMaxAmount) {
        this.slotMaxAmount = slotMaxAmount;
    }

    public BigInteger getMintedAmount() {
        return mintedAmount;
    }

    public void setMintedAmount(BigInteger mintedAmount) {
        this.mintedAmount = mintedAmount;
    }

    public BigInteger getRound() {
        return round;
    }

    public void setRound(BigInteger round) {
        this.round = round;
    }

    public BigInteger getQualifiedRound() {
        return qualifiedRound;
    }

    public void setQualifiedRound(BigInteger qualifiedRound) {
        this.qualifiedRound = qualifiedRound;
    }

    public String getQualifiedInscriptionId() {
        return qualifiedInscriptionId;
    }

    public void setQualifiedInscriptionId(String qualifiedInscriptionId) {
        this.qualifiedInscriptionId = qualifiedInscriptionId;
    }

    public int[] getQualifiedHash() {
        return qualifiedHash;
    }

    public void setQualifiedHash(int[] qualifiedHash) {
        this.qualifiedHash = qualifiedHash;
    }

    public BigInteger getQualifiedTimestamp() {
        return qualifiedTimestamp;
    }

    public void setQualifiedTimestamp(BigInteger qualifiedTimestamp) {
        this.qualifiedTimestamp = qualifiedTimestamp;
    }

    public BigInteger getQualifiedDifference() {
        return qualifiedDifference;
    }

    public void setQualifiedDifference(BigInteger qualifiedDifference) {
        this.qualifiedDifference = qualifiedDifference;
    }

    public String getCandidateInscriptionId() {
        return candidateInscriptionId;
    }

    public void setCandidateInscriptionId(String candidateInscriptionId) {
        this.candidateInscriptionId = candidateInscriptionId;
    }

    public int[] getCandidateHash() {
        return candidateHash;
    }

    public void setCandidateHash(int[] candidateHash) {
        this.candidateHash = candidateHash;
    }

    public String getCandidateInscriber() {
        return candidateInscriber;
    }

    public void setCandidateInscriber(String candidateInscriber) {
        this.candidateInscriber = candidateInscriber;
    }

    public BigInteger getCandidateTimestamp() {
        return candidateTimestamp;
    }

    public void setCandidateTimestamp(BigInteger candidateTimestamp) {
        this.candidateTimestamp = candidateTimestamp;
    }

    public BigInteger getCandidateAmount() {
        return candidateAmount;
    }

    public void setCandidateAmount(BigInteger candidateAmount) {
        this.candidateAmount = candidateAmount;
    }

    public BigInteger getCandidateNonce() {
        return candidateNonce;
    }

    public void setCandidateNonce(BigInteger candidateNonce) {
        this.candidateNonce = candidateNonce;
    }

    public BigInteger getCandidateDifference() {
        return candidateDifference;
    }

    public void setCandidateDifference(BigInteger candidateDifference) {
        this.candidateDifference = candidateDifference;
    }

    public String getCandidateContent() {
        return candidateContent;
    }

    public void setCandidateContent(String candidateContent) {
        this.candidateContent = candidateContent;
    }

    public BigInteger getVersion() {
        return version;
    }

    public void setVersion(BigInteger version) {
        this.version = version;
    }

    @Override
    public String toString() {
        return "Slot{" +
                "id=" + id +
                ", slotNumber=" + slotNumber +
                ", offChainVersion=" + offChainVersion +
                ", genesisTimestamp=" + genesisTimestamp +
                ", slotMaxAmount=" + slotMaxAmount +
                ", mintedAmount=" + mintedAmount +
                ", round=" + round +
                ", qualifiedRound=" + qualifiedRound +
                ", qualifiedInscriptionId=" + '\'' + qualifiedInscriptionId + '\'' +
                ", qualifiedHash=" + Arrays.toString(qualifiedHash) +
                ", qualifiedTimestamp=" + qualifiedTimestamp +
                ", qualifiedDifference=" + qualifiedDifference +
                ", candidateInscriptionId=" + '\'' + candidateInscriptionId + '\'' +
                ", candidateHash=" + Arrays.toString(candidateHash) +
                ", candidateInscriber=" + '\'' + candidateInscriber + '\'' +
                ", candidateTimestamp=" + candidateTimestamp +
                ", candidateAmount=" + candidateAmount +
                ", candidateNonce=" + candidateNonce +
                ", candidateDifference=" + candidateDifference +
                ", candidateContent=" + '\'' + candidateContent + '\'' +
                ", version=" + version +
                '}';
    }
}
