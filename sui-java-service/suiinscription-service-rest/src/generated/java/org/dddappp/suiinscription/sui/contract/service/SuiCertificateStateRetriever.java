// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddappp.suiinscription.sui.contract.service;

import com.github.wubuku.sui.bean.*;
import com.github.wubuku.sui.utils.*;
import org.dddappp.suiinscription.domain.certificate.*;
import org.dddappp.suiinscription.domain.*;
import org.dddappp.suiinscription.sui.contract.DomainBeanUtils;
import org.dddappp.suiinscription.sui.contract.Certificate;

import java.util.*;
import java.math.*;
import java.util.function.*;

public class SuiCertificateStateRetriever {

    private SuiJsonRpcClient suiJsonRpcClient;

    private Function<String, CertificateState.MutableCertificateState> certificateStateFactory;

    public SuiCertificateStateRetriever(SuiJsonRpcClient suiJsonRpcClient,
                                  Function<String, CertificateState.MutableCertificateState> certificateStateFactory
    ) {
        this.suiJsonRpcClient = suiJsonRpcClient;
        this.certificateStateFactory = certificateStateFactory;
    }

    public CertificateState retrieveCertificateState(String objectId) {
        SuiMoveObjectResponse<Certificate> getObjectDataResponse = suiJsonRpcClient.getMoveObject(
                objectId, new SuiObjectDataOptions(true, true, true, true, true, true, true), Certificate.class
        );
        if (getObjectDataResponse.getData() == null) {
            return null;
        }
        Certificate certificate = getObjectDataResponse.getData().getContent().getFields();
        return toCertificateState(certificate);
    }

    private CertificateState toCertificateState(Certificate certificate) {
        CertificateState.MutableCertificateState certificateState = certificateStateFactory.apply(certificate.getId().getId());
        certificateState.setVersion(BigInteger.valueOf(-1));
        certificateState.setInscriptionId(certificate.getInscriptionId());
        certificateState.setInscriptionHash(certificate.getInscriptionHash());
        certificateState.setSlotNumber(certificate.getSlotNumber());
        certificateState.setRound(certificate.getRound());
        certificateState.setInscriber(certificate.getInscriber());
        certificateState.setInscriptionTimestamp(certificate.getInscriptionTimestamp());
        certificateState.setAmount(certificate.getAmount());
        certificateState.setInscriptionNonce(certificate.getInscriptionNonce());
        certificateState.setInscriptionContent(certificate.getInscriptionContent());
        return certificateState;
    }

    
}

