// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddappp.suiinscription.sui.contract.service;

import com.github.wubuku.sui.bean.*;
import com.github.wubuku.sui.utils.*;
import org.dddappp.suiinscription.domain.slot.*;
import org.dddappp.suiinscription.domain.*;
import org.dddappp.suiinscription.sui.contract.DomainBeanUtils;
import org.dddappp.suiinscription.sui.contract.Slot;

import java.util.*;
import java.math.*;
import java.util.function.*;

public class SuiSlotStateRetriever {

    private SuiJsonRpcClient suiJsonRpcClient;

    private Function<Integer, SlotState.MutableSlotState> slotStateFactory;

    public SuiSlotStateRetriever(SuiJsonRpcClient suiJsonRpcClient,
                                  Function<Integer, SlotState.MutableSlotState> slotStateFactory
    ) {
        this.suiJsonRpcClient = suiJsonRpcClient;
        this.slotStateFactory = slotStateFactory;
    }

    public SlotState retrieveSlotState(String objectId) {
        SuiMoveObjectResponse<Slot> getObjectDataResponse = suiJsonRpcClient.getMoveObject(
                objectId, new SuiObjectDataOptions(true, true, true, true, true, true, true), Slot.class
        );
        if (getObjectDataResponse.getData() == null) {
            return null;
        }
        Slot slot = getObjectDataResponse.getData().getContent().getFields();
        return toSlotState(slot);
    }

    private SlotState toSlotState(Slot slot) {
        SlotState.MutableSlotState slotState = slotStateFactory.apply(slot.getSlotNumber());
        slotState.setId_(slot.getId().getId());
        slotState.setVersion(slot.getVersion());
        slotState.setGenesisTimestamp(slot.getGenesisTimestamp());
        slotState.setSlotMaxAmount(slot.getSlotMaxAmount());
        slotState.setMintedAmount(slot.getMintedAmount());
        slotState.setRound(slot.getRound());
        slotState.setQualifiedRound(slot.getQualifiedRound());
        slotState.setQualifiedInscriptionId(slot.getQualifiedInscriptionId());
        slotState.setQualifiedHash(slot.getQualifiedHash());
        slotState.setQualifiedTimestamp(slot.getQualifiedTimestamp());
        slotState.setQualifiedDifference(slot.getQualifiedDifference());
        slotState.setCandidateInscriptionId(slot.getCandidateInscriptionId());
        slotState.setCandidateHash(slot.getCandidateHash());
        slotState.setCandidateInscriber(slot.getCandidateInscriber());
        slotState.setCandidateTimestamp(slot.getCandidateTimestamp());
        slotState.setCandidateAmount(slot.getCandidateAmount());
        slotState.setCandidateNonce(slot.getCandidateNonce());
        slotState.setCandidateDifference(slot.getCandidateDifference());
        slotState.setCandidateContent(slot.getCandidateContent());
        return slotState;
    }

    
}

