// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

module sui_inscription::slot_aggregate {
    use sui::clock::Clock;
    use sui::tx_context;
    use sui_inscription::inscription::Inscription;
    use sui_inscription::slot;
    use sui_inscription::slot_advance_logic;
    use sui_inscription::slot_create_logic;
    use sui_inscription::slot_put_up_candidate_logic;

    public entry fun create(
        slot_number: u8,
        clock: &Clock,
        slot_number_table: &mut slot::SlotNumberTable,
        ctx: &mut tx_context::TxContext,
    ) {
        let slot_created = slot_create_logic::verify(
            slot_number,
            clock,
            slot_number_table,
            ctx,
        );
        let slot = slot_create_logic::mutate(
            &slot_created,
            slot_number_table,
            ctx,
        );
        slot::set_slot_created_id(&mut slot_created, slot::id(&slot));
        slot::share_object(slot);
        slot::emit_slot_created(slot_created);
    }

    public entry fun put_up_candidate(
        slot: &mut slot::Slot,
        candidate_inscription: &Inscription,
        clock: &Clock,
        ctx: &mut tx_context::TxContext,
    ) {
        let candidate_inscription_put_up = slot_put_up_candidate_logic::verify(
            candidate_inscription,
            clock,
            slot,
            ctx,
        );
        slot_put_up_candidate_logic::mutate(
            &candidate_inscription_put_up,
            slot,
            ctx,
        );
        slot::update_object_version(slot);
        slot::emit_candidate_inscription_put_up(candidate_inscription_put_up);
    }

    public entry fun advance(
        slot: &mut slot::Slot,
        clock: &Clock,
        ctx: &mut tx_context::TxContext,
    ) {
        let slot_advanced = slot_advance_logic::verify(
            clock,
            slot,
            ctx,
        );
        slot_advance_logic::mutate(
            &slot_advanced,
            slot,
            ctx,
        );
        slot::update_object_version(slot);
        slot::emit_slot_advanced(slot_advanced);
    }

}
